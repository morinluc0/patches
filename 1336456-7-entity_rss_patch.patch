diff --git a/entity.info b/entity.info
index 12cd58f..620086f 100644
--- a/entity.info
+++ b/entity.info
@@ -22,4 +22,5 @@ files[] = views/handlers/entity_views_handler_field_text.inc
 files[] = views/handlers/entity_views_handler_field_uri.inc
 files[] = views/handlers/entity_views_handler_relationship_by_bundle.inc
 files[] = views/handlers/entity_views_handler_relationship.inc
+files[] = views/plugins/entity_views_plugin_row_entity_rss.inc
diff --git a/views/entity.views.inc b/views/entity.views.inc
index 596d721..4475e00 100644
--- a/views/entity.views.inc
+++ b/views/entity.views.inc
@@ -301,6 +301,16 @@ function entity_views_plugins() {
           'type' => 'normal',
           'base' => $base_tables,
         ),
+	'entity_rss' => array (
+	  'title' => t('Entity as RSS items'),
+	  'help' => t('Renders a single entity in a specifix view mode as an RSS item.'),
+	  'handle' => 'entity_views_plugin_row_entity_rss',
+	  'theme' => 'views_view_row_rss',
+	  'type' => 'feed',
+	  'uses fields' => FALSE,
+    	  'uses options' => TRUE,
+	  'base' => $base_tables,
+	),
       ),
     );
   }
diff --git a/views/plugins/entity_views_plugin_row_entity_rss.inc b/views/plugins/entity_views_plugin_row_entity_rss.inc
new file mode 100644
index 0000000..9d13324
--- /dev/null
+++ b/views/plugins/entity_views_plugin_row_entity_rss.inc
@@ -0,0 +1,65 @@
+<?php
+
+/**
+ * @file
+ * Row style plugin for displaying entities rss feed items.
+ */
+
+/**
+ * Plugin class for displaying Views results with entity_view.
+ */
+class entity_views_plugin_row_entity_rss extends entity_views_plugin_row_entity_view {
+
+  /**
+   * Overridden to construct RSS output based on the entity.
+   */
+  function render($values) {
+    global $base_url;
+
+    if ($entity = $this->get_value($values)) {
+      $id = entity_id($this->entity_type, $entity);
+      $uri = entity_uri($this->entity_type, $entity);
+      $link = url($uri['path'], $uri['options'] + array('absolute' => TRUE));
+
+      $render = $this->rendered_content[$id];
+      // TODO: Document why #theme should be unset.
+      unset($render['#theme']);
+
+      $entity->rss_namespaces = array();
+      $rss_elements = array(
+        /*
+        array(
+          'key' => 'pubDate',
+          'value' => gmdate('r', $entity->created),
+        ),
+        array(
+          'key' => 'dc:creator',
+          'value' => $node->name,
+        ),
+         */
+        array(
+          'key' => 'guid',
+          'value' => $id . ' at ' . $base_url,
+          'attributes' => array('isPermaLink' => 'false'),
+        ),
+      );
+
+      if (!empty($entity->rss_namespaces)) {
+        $this->view->style_plugin->namespaces = array_merge($this->view->style_plugin->namespaces, $entity->rss_namespaces);
+      }
+
+      $item = new stdClass();
+      $item->description = drupal_render($render);
+      $item->title = entity_label($this->entity_type, $entity);
+      $item->link = $link;
+      $item->elements = $rss_elements;
+      $item->id = $id;
+
+      return theme($this->theme_functions(), array(
+        'view' => $this->view,
+        'options' => $this->options,
+        'row' => $item
+      ));
+    }
+  }
+}
